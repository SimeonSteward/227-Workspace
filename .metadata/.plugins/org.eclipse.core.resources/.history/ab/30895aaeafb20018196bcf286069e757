package hw1;

public class Printer {
	 /**
	 * Capacity, in ounces, of a new ink cartridge.
	 */
	 public static final double INK_CAPACITY = 2.0;

	 /**
	 * Amount of ink, in ounces, used per printed page.
	 */
	 public static final double INK_USAGE = 0.0023;
	 
	 private int capacity;
	 private int currentPaper;
	 private int 
	 /**
	  * Constructs a printer that has the given capacity (number of sheets of paper it can hold). Initially it contains no paper and a full ink cartridge.
	  * @param givenCapacity
	  */
	 public Printer(int givenCapacity) {
		 capacity = givenCapacity;
		 currentPaper = 0;
		 
	 }
	 
	 /**
	  * Constructs a printer that has the given capacity (number of sheets of paper it can hold). Initially it contains the given number of sheets of paper and a full ink cartridge. 
	  * @param givenCapacity
	  * @param givenNumberOfSheets
	  */
	 public Printer(int givenCapacity, int givenNumberOfSheets) {
		 //TODO
	 }
	 
	 /**
	  * Adds the given number of sheets of paper to this printer, not exceeding the printer's
capacity.
	  * @param additionalSheets
	  */
	 public void addPaper(int additionalSheets) {
		 
	 }
	 
	 /**
	  * Returns the number of sheets of paper currently in this printer. This value is never
negative.
	  * @return
	  */
	 public int getCurrentPaper() {
		 //TODO
		 return 1;
	 }
	 
	 /**
	  * Returns the total number of sheets of paper printed by this printer since its construction.
Note this is counting sheets of paper, not pages printed, i.e. sheets used for two sided
printing still count as just one sheet.
	  * @return
	  */
	 public int getTotalPaperUse() {
		 //TODO
		 return 1;
	 }
	 
	 /**
	  * Determines whether the ink has run out. Returns true if the amount of ink left is smaller
than the quantity INK_USAGE needed to print one page.
	  * @return
	  */
	 public boolean isInkOut() {
		 //TODO
		 return true;
	 }
	 
	 /**
	  * Simulates replacement of the ink cartridge, restoring the quantity of ink in the printer to
INK_CAPACITY
	  */
	 public void replaceInk() {
		 //TODO
	 }
	 
	 /**
	  * Simulates printing pages in one-sided mode, using the appropriate number of sheets and a
corresponding quantity of ink. If there is not enough paper, the printer will use up all
remaining paper and will only use the quantity of ink needed for the sheets actually
printed. If there is not enough ink, the printer will use up all the ink, and will still use up
the specified number of sheets of paper (i.e., it just prints a bunch of blank pages after the
ink runs out).
	  * @param numberOfPages
	  */
	 public void print(int numberOfPages) {
		 //TODO
	 }
	 
	 /**
	  * Simulates printing pages in two-sided mode, using the appropriate number of sheets and a
corresponding quantity of ink. If there is not enough paper, the printer will use up all
remaining paper and will only use the quantity of ink needed for the sheets actually
printed. If there is not enough ink, the printer will use up all the ink, and will still use up
the specified number of sheets of paper (i.e., it just prints a bunch of blank pages after the
ink runs out).
	  * @param numberOfPages
	  */
	 public void printTwoSided(int numberOfPages) {
		 //TODO 
	 }
}
